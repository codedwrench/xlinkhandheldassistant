---
- name: Download Boost
  win_get_url:
    dest: '{{ drive }}:\{{ install_dir}}\boost.zip'
    url: 'https://boostorg.jfrog.io/artifactory/main/release/{{ boost_version }}/source/boost_{{ boost_version.split(".")[0] }}_{{ boost_version.split(".")[1] }}_{{ boost_version.split(".")[2] }}.zip'
  register: boost_download_result

- name: Unzip Boost
  win_unzip:
    delete_archive: yes
    src: '{{ drive }}:\{{ install_dir}}\boost.zip'
    dest: '{{ drive }}:\{{ install_dir}}'
  when: boost_download_result.msg is defined and boost_download_result.msg == "OK"

- name: Rename Boost
  win_shell: "move boost* boost"
  args:
    chdir: '{{ drive }}:\{{ install_dir }}'
  when: boost_download_result.msg is defined and boost_download_result.msg == "OK"

- name: Build Boost
  win_shell:
    '{{ drive }}:\msys64\msys2_shell.cmd -mingw32 -defterm -no-start -here -c
    "cd tools/build && ./bootstrap.bat mingw && cp b2 ../.. && cd ../.. &&
    ./tools/build/b2.exe --build-type=minimal --toolset=gcc variant=release link=static runtime-link=static 
    address-model=32 threading=multi --with-system --with-program_options stage"'
  args:
    chdir: '{{ drive }}:\{{ install_dir }}\boost'
  register: boost_build_output
  when: boost_download_result.msg is defined and boost_download_result.msg == "OK"

- name: Log output to file
  local_action: copy content={{ boost_build_output.stdout }} dest=./boost_output.log
  when: boost_build_output.stdout 
  
- name: Log error output to file
  local_action: copy content={{ boost_build_output.stderr }} dest=./boost_error_output.log
  when: boost_build_output.stderr 