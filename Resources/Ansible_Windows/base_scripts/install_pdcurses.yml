---
- name: Download PDCurses
  ansible.windows.win_get_url:
    dest: "{{ drive }}:\\{{ install_dir }}\\pdcurses.zip"
    url: https://github.com/Bill-Gray/PDCursesMod/archive/refs/tags/v{{ pdcurses_version }}.zip
  register: pdcurses_download_result

- name: Unzip PDCurses
  community.windows.win_unzip:
    delete_archive: true
    src: "{{ drive }}:\\{{ install_dir }}\\pdcurses.zip"
    dest: "{{ drive }}:\\{{ install_dir }}"
  when: pdcurses_download_result.msg is defined and pdcurses_download_result.msg == "OK"

- name: Rename PDCurses
  ansible.windows.win_shell: move PDCurses* pdcurses
  args:
    chdir: "{{ drive }}:\\{{ install_dir }}"
  when: pdcurses_download_result.msg is defined and pdcurses_download_result.msg == "OK"

- name: Build PDCurses
  ansible.windows.win_shell: '{{ drive }}:\msys64\msys2_shell.cmd -mingw32 -defterm -no-start -here -c "mingw32-make WIDE=Y CHTYPE_32=Y -j4" '
  args:
    chdir: "{{ drive }}:\\{{ install_dir }}\\pdcurses\\wincon"
  register: pdcurses_build_output
  when: pdcurses_download_result.msg is defined and pdcurses_download_result.msg == "OK"

- name: Log output to file
  ansible.builtin.copy:
    content: "{{ pdcurses_build_output.stdout }}"
    dest: ./pdcurses_output.log
    mode: "0644"
  delegate_to: localhost
  when: pdcurses_build_output.stdout

- name: Log error output to file
  ansible.builtin.copy:
    content: "{{ pdcurses_build_output.stderr }}"
    dest: ./pdcurses_error_output.log
    mode: "0644"
  delegate_to: localhost
  when: pdcurses_build_output.stderr
